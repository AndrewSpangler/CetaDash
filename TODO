add action buttons to container view page
add table page in cd binds with context by warpping the template render function

Trigger logs store ran endpoint as string, save session id and put on logs page
add start and end times to run logs
TRACK EDIT VERSIONS IN RUN LOGS

HIGH PRIORITY:
 - add workspace logging to container runtime errors (leverage the existing message queue to also write to stdout with context)

GENERAL:
 - run counts on tasks/triggers etc
 - docker page updates status / color periodically
 - add some dashboard tabs

MACROS:
 - move accordians to macros
 - make search bar standard option on table pages

TRIGGERS:
 - Attached / detached modes
 - Start-if-not-existing
 - stream vs redirect for endpoints in triggers
 - trigger endpoint optional / disabled
 - triggers disabled
 - add box similar to container status for endpoint status
 - make trigger day of week a series of checkboxes in editor

SCHEDULED TRIGGERS: 
 - fix trigger scheduler updates when changes are made
 - run on launch or delayed
 - store info on tasks that were scheduled but haven't run yet for future runs
 - add box similar to container status for trigger status

DOCU:
 - write docu
 - link docu to tasks/workflows/triggers
 - Attach documents to other documents

LONG TERM:
 - custom docker labels for cetadash
 - separate proxy setup app
 - containerized script runner (py, js, lua) [network optional]
 - â€œprocess_changes" for logs, acts on before and after dict to generate a changelist
 - ships (for presets)
 - listeners for db edits (like triggers), eg "run container when new user is added to db"
 - TRAEFIK
    - auto-regen traefik acls
 - NETWORK SCANNER / UPTIME MONITOR
    - log scans

figure out db-paginated tables for faster loads (see docu page?)
loading message in tables?

COSMETIC:
 - fix bootstrap copy to clipboard popup theme
 - per-user personal theme overrides from db